---
import { v4 as uuidv4 } from "uuid"
import { AccordionItem } from "../types"

const id = uuidv4()

export interface Props {
  items: AccordionItem[]
  mode: "collapse" | "open"
  class?: string
}

const { items, mode } = Astro.props as Props
---

<div id={`accordion-${id}`} data-accordion={mode} class={Astro.props.class}>
  {
    items.map((item, index) => (
      <>
        <h2 id={`accordion-${id}-heading-${index}`}>
          <button
            type="button"
            class={`flex items-center justify-between w-full p-5 font-medium text-left text-gray-900 bg-gray-100 border${
              items.length === index + 1 ? "" : " border-b-0"
            } border-gray-200${
              index > 0 ? "" : " rounded-t-xl"
            } focus:ring-4 focus:ring-gray-200 hover:bg-gray-100`}
            data-accordion-target={`#accordion-${id}-body-${index}`}
            aria-expanded={index > 0 ? "false" : "true"}
            aria-controls={`accordion-${id}-body-${index}`}
          >
            <span>{item.title}</span>
            <svg
              data-accordion-icon=""
              class="w-6 h-6 rotate-180 shrink-0"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                fill-rule="evenodd"
                d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                clip-rule="evenodd"
              />
            </svg>
          </button>
        </h2>
        <div
          id={`accordion-${id}-body-${index}`}
          class={index > 0 ? "hidden" : ""}
          aria-labelledby={`accordion-${id}-heading-${index}`}
        >
          <div
            class={`p-5 font-light border ${
              items.length === index + 1 ? "border-t-0" : "border-b-0"
            } border-gray-200`}
          >
            <p class="text-gray-500">{item.text}</p>
          </div>
        </div>
      </>
    ))
  }
</div>
