---
export interface Props {
  breadcrumb: IBreadcrumbSingle[]
  class?: string
}

export interface IBreadcrumbSingle {
  title: string
  href?: string
}

const { breadcrumb } = Astro.props as Props
---

{
  breadcrumb?.length > 0 ? (
    <nav
      class={`flex max-w-screen-lg mx-auto mt-2${
        Astro.props.class ? Astro.props.class : ""
      }`}
      aria-label="Breadcrumb"
    >
      <ol class="inline-flex items-center space-x-1 text-center md:space-x-3">
        <li class="inline-flex items-center">
          <a
            href="/"
            class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-gray-900"
          >
            <svg
              class="w-4 h-4 mr-2"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z" />
            </svg>
            Home
          </a>
        </li>

        {breadcrumb.map((item, index) => {
          const last = index === breadcrumb.length - 1
          if (last) {
            return (
              <li aria-current="page">
                <div class="flex items-center">
                  <svg
                    class="w-6 h-6 text-gray-400"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                      clip-rule="evenodd"
                    />
                  </svg>
                  <span class="ml-1 text-sm font-medium text-gray-500 md:ml-2">
                    {item.title}
                  </span>
                </div>
              </li>
            )
          } else {
            return (
              <li>
                <div class="flex items-center">
                  <svg
                    class="w-6 h-6 text-gray-400"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                      clip-rule="evenodd"
                    />
                  </svg>
                  <a
                    href={item.href ? item.href : ""}
                    class="ml-1 text-sm font-medium text-gray-700 hover:text-gray-900 md:ml-2"
                  >
                    {item.title}
                  </a>
                </div>
              </li>
            )
          }
        })}
      </ol>
    </nav>
  ) : null
}
