---
import { NAVITEMS } from "../config"
import logo from "../assets/logo.svg"
import Breadcrumb from "./Breadcrumb.astro"
import { v4 as uuidv4 } from "uuid"
import { IBreadcrumbSingle } from "./Breadcrumb.astro"
import GithubSlugger from "github-slugger"
import { NavItem } from "../types"

const slugger = new GithubSlugger()

const navItems24h = await Astro.glob("../data/24h-schwimmen/*.md")

let navItems: NavItem[] = [
  ...NAVITEMS,
  {
    title: "24h Schwimmen",
    href: "/24h-schwimmen/",
    subnav: navItems24h
      .filter((item) => !item.frontmatter.draft)
      .map((item) => {
        const slug = slugger.slug(item.frontmatter.title)
        return {
          title: item.frontmatter.title,
          href: `/24h-schwimmen/${slug}/`,
        }
      })
      .reverse(),
  },
]

export interface Props {
  breadcrumb?: IBreadcrumbSingle[]
  class?: string
}
let pathname = new URL(Astro.request.url).pathname
if (pathname[pathname.length - 1] == "/" && pathname.length > 1)
  pathname = pathname.slice(0, -1)

const { breadcrumb } = Astro.props as Props

function checkSubNavActive(item) {
  const href =
    item.href[item.href.length - 1] == "/" ? item.href.slice(0, -1) : item.href
  if (href == pathname) return true
  const { subnav } = item
  let active = false
  for (let i = 0; i < subnav.length; i++) {
    const subnavHref =
      subnav[i].href[subnav[i].href.length - 1] == "/"
        ? subnav[i].href.slice(0, -1)
        : subnav[i].href
    if (subnavHref == pathname) active = true
  }
  return active
}
---

<header
  class={`bg-white border-b-2 border-gray-200 py-2.5 sticky top-0 z-20${
    Astro.props.class ? " " + Astro.props.class : ""
  }`}
>
  <nav class="">
    <div
      class="flex flex-wrap items-center justify-between max-w-screen-lg mx-auto"
    >
      <a href="/" class="flex items-center">
        <img
          src={logo}
          class="h-6 mr-2 sm:h-9"
          alt="Schwimmverein Haren e.V. Logo"
        />
        <span
          class="self-center text-xl font-bold whitespace-nowrap font-poppins"
          >SV Haren</span
        >
      </a>
      <button
        data-collapse-toggle="navbar-default"
        type="button"
        class="inline-flex items-center p-2 ml-3 text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200"
        aria-controls="navbar-default"
        aria-expanded="false"
      >
        <span class="sr-only">Hauptmenü öffnen</span>
        <svg
          class="w-6 h-6"
          aria-hidden="true"
          fill="currentColor"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
          ><path
            fill-rule="evenodd"
            d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
            clip-rule="evenodd"></path>
        </svg>
      </button>
      <div class="hidden w-full md:block md:w-auto" id="navbar-default">
        <ul
          class="flex flex-col mt-4 border border-gray-100 rounded-lg -px-2 bg-gray-50 md:flex-row md:space-x-4 lg:space-x-8 md:mt-0 md:text-sm md:font-medium md:border-0 md:bg-white"
        >
          {
            navItems.map((item) => {
              if (!item.subnav) {
                return (
                  <li>
                    <a
                      href={item.href}
                      class={`block py-2 pr-4 pl-3 rounded font-medium border-b border-gray-100 md:border-0 ${
                        pathname == item.href
                          ? "text-white bg-blue-700 md:bg-transparent md:text-blue-700 md:p-0"
                          : "text-gray-700 hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0"
                      }`}
                      rel={item?.external ? "noreferrer noopener" : ""}
                      target={item?.external ? "_blank" : "_self"}
                      aria-current="page"
                    >
                      {item.title}
                    </a>
                  </li>
                )
              } else {
                const id = uuidv4()
                return (
                  <li>
                    <button
                      id={`dropdownNavbarButton-${id}`}
                      data-dropdown-toggle={`dropdownNavbar-${id}`}
                      class={`flex items-center justify-between w-full py-2 pl-3 pr-4 font-medium rounded border-b border-gray-100  md:border-0  md:p-0 md:w-auto ${
                        checkSubNavActive(item)
                          ? "text-white bg-blue-700 md:bg-transparent md:text-blue-700"
                          : "hover:bg-gray-50 md:hover:text-blue-700 text-gray-700 md:hover:bg-transparent"
                      }`}
                    >
                      {item.title}
                      <svg
                        class="w-4 h-4 ml-1"
                        aria-hidden="true"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          fill-rule="evenodd"
                          d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                          clip-rule="evenodd"
                        />
                      </svg>
                    </button>
                    <div
                      id={`dropdownNavbar-${id}`}
                      class="z-10 hidden bg-white divide-y divide-gray-100 rounded shadow w-min"
                    >
                      <ul
                        class="py-1 text-sm text-gray-700"
                        aria-labelledby={`dropdownNavbarButton-${id}`}
                      >
                        {item.subnav.map((subitem) => (
                          <li>
                            <a
                              href={subitem.href}
                              class="block px-4 py-2 hover:bg-gray-100"
                              rel={
                                subitem?.external ? "noreferrer noopener" : ""
                              }
                              target={subitem?.external ? "_blank" : "_self"}
                            >
                              {subitem.title}
                            </a>
                          </li>
                        ))}
                      </ul>
                    </div>
                  </li>
                )
              }
            })
          }
        </ul>
      </div>
    </div>
  </nav>
  <Breadcrumb breadcrumb={breadcrumb} />
</header>
